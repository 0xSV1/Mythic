exports.ls = function(task, command, params){
    ObjC.import('Foundation');
    var fileManager = $.NSFileManager.defaultManager;
    var error = Ref();
    var path = params;
    if(params == "" || params == undefined){
        path = fileManager.currentDirectoryPath.js;
        if(path == undefined || path == ""){
            return "Failed to get the current working directory";
        }
    }
    if(path[0] == '"'){
        path = path.substring(1, path.length-1);
    }
    var attributes = ObjC.deepUnwrap(fileManager.attributesOfItemAtPathError($(path), error));
    if(attributes != undefined){
        if(attributes.hasOwnProperty('NSFileType') && attributes['NSFileType'] == "NSFileTypeDirectory"){
            var error = Ref();
            var files = fileManager.contentsOfDirectoryAtPathError($(path), error);
            if(error[0].js == $().js){
                var files_data = [];
                var sub_files = ObjC.deepUnwrap(files);
                if(path[path.length-1] != "/"){
                    path = path + "/";
                }
                for(var i = 0; i < sub_files.length; i++){
                    var attr = ObjC.deepUnwrap(fileManager.attributesOfItemAtPathError($(path + sub_files[i]), error));
                    var file_add = sub_files[i];
                    if(attr['NSFileType'] ==  "NSFileTypeDirectory"){
                        file_add = file_add + "/";
                    }
                    var nsposix = attr['NSFilePosixPermissions'];
                    // we need to fix this mess to actually be real permission bits that make sense
                    var posix = ((nsposix >> 6) & 0x7).toString() + ((nsposix >> 3) & 0x7).toString() + (nsposix & 0x7).toString();
                    file_add = file_add + " - " + posix + " - " + attr['NSFileOwnerAccountName'] + "(" + attr['NSFileOwnerAccountID'] +
                        "):" + attr['NSFileGroupOwnerAccountName'] + "(" + attr['NSFileGroupOwnerAccountID'] + ")";
                    if(attr['NSFileExtensionHidden']){
                        file_add = file_add + " File Extension Hidden";
                    }
                    files_data.push(file_add);
                }
                attributes['files'] = files_data;
            }
        }
        delete attributes['NSFileSystemFileNumber'];
        delete attributes['NSFileSystemNumber'];
        delete attributes['NSFileType'];
        var nsposix = attributes['NSFilePosixPermissions'];
        // we need to fix this mess to actually be real permission bits that make sense
        var posix = ((nsposix >> 6) & 0x7).toString() + ((nsposix >> 3) & 0x7).toString() + (nsposix & 0x7).toString();
        attributes['NSFilePosixPermissions'] = posix;
        return JSON.stringify(attributes, null, 2);
    }
    return "Failed to get attributes of file";
};